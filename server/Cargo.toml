[package]
name = "server"
version.workspace = true
authors.workspace = true
description.workspace = true
license.workspace = true
edition.workspace = true


[dependencies]
actix-web = { version = "4", features = ["macros"] }
actix-files = { version = "0.6" }
http = { version = "1.0.0" }
leptos_actix = { version = "0.6.11" }
leptos = { workspace = true, features = [] }
leptos_meta = { workspace = true }
leptos_router = { workspace = true }
bytes = { version = "1.6" }
tokio = { version = "1.34" }

# [features]
# hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
# ssr = [
#     "dep:actix-files",
#     "dep:actix-web",
#     "dep:leptos_actix",
#     "leptos/ssr",
#     "leptos_meta/ssr",
#     "leptos_router/ssr",
# ]


# [package.metadata.leptos]
# # The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
# output-name = "client_ssr"
# # The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
# site-root = "target/site"
# # The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# # Defaults to pkg
# site-pkg-dir = "pkg"
# # [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
# # style-file = "css/styles.css"
# # Assets source dir. All files found here will be copied and synchronized to site-root.
# # The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
# #
# # Optional. Env: LEPTOS_ASSETS_DIR.
# assets-dir = "../client/assets"
# # The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
# site-addr = "127.0.0.1:3000"
# # The port to use for automatic reload monitoring
# reload-port = 3001
# #  The browserlist query used for optimizing the CSS.
# browserquery = "defaults"
# # The environment Leptos will run in, usually either "DEV" or "PROD"
# env = "DEV"
# # The features to use when compiling the bin target
# #
# # Optional. Can be over-ridden with the command line parameter --bin-features
# bin-features = ["ssr"]

# # If the --no-default-features flag should be used when compiling the bin target
# #
# # Optional. Defaults to false.
# bin-default-features = false

# # The features to use when compiling the lib target
# #
# # Optional. Can be over-ridden with the command line parameter --lib-features
# lib-features = ["hydrate"]

# # If the --no-default-features flag should be used when compiling the lib target
# #
# # Optional. Defaults to false.
# lib-default-features = false

# # The profile to use for the lib target when compiling for release
# #
# # Optional. Defaults to "release".
# lib-profile-release = "wasm-release"
